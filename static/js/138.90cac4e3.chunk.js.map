{"version":3,"file":"static/js/138.90cac4e3.chunk.js","mappings":"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","sources":["components/modules/CourseDetails/components/About/About.styled.js","components/modules/CourseDetails/components/About/About.jsx","components/modules/CourseDetails/components/Consists/Consists.styled.js","components/modules/CourseDetails/components/Consists/ConsistsItem.jsx","components/modules/CourseDetails/common/common.styled.js","components/modules/CourseDetails/components/Consists/Consists.jsx","components/modules/CourseDetails/components/Groups/GroupsNavigation/GroupsNavigation.styled.js","components/modules/CourseDetails/components/Groups/GroupsNavigation/GroupsNavigation.jsx","components/modules/CourseDetails/components/Groups/Groups.jsx","components/modules/CourseDetails/components/Program/Programs.styled.js","components/modules/CourseDetails/components/Program/ProgramItem.jsx","components/modules/CourseDetails/components/Program/Program.jsx","components/modules/CourseDetails/CourseDetails.jsx","page/CourseDetails/CourseDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Container, Text as TextBase, TitleH1, devices } from 'components/global';\n\nexport const AboutContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Title = styled(TitleH1)`\n  margin-bottom: 20px;\n  ${devices.desktop} {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const TopText = styled(TextBase)`\n  margin-bottom: 40px;\n  max-width: 558px;\n  ${devices.desktop} {\n    margin-bottom: 100px;\n  }\n`;\n\nexport const ContentWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n  ${devices.desktop} {\n    flex-direction: row;\n    gap: 60px;\n  }\n`;\n\nexport const ImageWrap = styled.div`\n  width: 100%;\n  height: auto;\n\n  border-radius: 12px;\n  overflow: hidden;\n  background-color: ${p => p.theme.colors.btnBg};\n\n  ${devices.desktop} {\n    width: 552px;\n    height: 472px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const TextWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  max-width: 588px;\n\n  ${devices.desktop} {\n    padding-right: 78px;\n  }\n  \n  p {\n    margin-bottom: 20px;\n  }\n`;\n","import { Section, Text, TitleH4 } from 'components/global';\nimport {\n  ImageWrap,\n  Image,\n  TextWrap,\n  AboutContainer,\n  Title,\n  TopText,\n  ContentWrap,\n} from './About.styled';\n\nexport const About = ({ category, type, previewText, description, image }) => {\n  const descriptionArray = description.split('\\n\\n');\n\n  return (\n    <Section>\n      <AboutContainer>\n        <Title color=\"at\">{category}</Title>\n        <TopText color=\"t\" textAlign=\"center\" lh=\"big\">\n          {previewText}\n        </TopText>\n\n        <ContentWrap>\n          <ImageWrap>\n            <Image src={image} alt={category} loading=\"lazy\" />\n          </ImageWrap>\n          <TextWrap>\n            <TitleH4 mb={16}>Про {type}</TitleH4>\n            {descriptionArray.map((text, index) => (\n              <Text size={16} lh=\"body\" key={index}>\n                {text}\n              </Text>\n            ))}\n          </TextWrap>\n        </ContentWrap>\n      </AboutContainer>\n    </Section>\n  );\n};\n","import styled from 'styled-components';\nimport { devices } from 'components/global';\n\nexport const ConsistsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n\n  ${devices.desktop} {\n    flex-direction: row;\n    gap: 24px;\n  }\n`;\n\nexport const ConsistItemWrap = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  width: 384px;\n  padding-right: 10px;\n\n  ${devices.desktop} {\n    gap: 16px;\n  }\n`;\n","import { Text, TitleH4 } from 'components/global';\nimport { ConsistItemWrap } from './Consists.styled';\n\nexport const ConsistsItem = ({ name, description }) => {\n  return (\n    <ConsistItemWrap>\n      <TitleH4 weight={700}>\n        {name}\n      </TitleH4>\n      <Text lh=\"body\" color=\"t\">\n        {description}\n      </Text>\n    </ConsistItemWrap>\n  );\n};\n","import { TitleH3 } from 'components/global';\nimport { devices } from 'components/global/styled';\nimport styled from 'styled-components';\n\nexport const SectionTitle = styled(TitleH3)`\n  margin-bottom: 40px;\n\n  ${devices.desktop} {\n    margin-bottom: 60px;\n  }\n`;","import React from 'react';\nimport { Container, Section } from 'components/global';\nimport { ConsistsItem } from './ConsistsItem';\nimport { ConsistsList } from './Consists.styled';\n\nimport { SectionTitle } from '../../common';\n\nexport const Consists = ({ details, type }) => {\n  if (!details) return;\n  const detailsArray = Object.values(details);\n\n  return (\n    <Section>\n      <Container>\n        <SectionTitle color=\"at\">Що містить {type}?</SectionTitle>\n        <ConsistsList>\n          {detailsArray.map(({ name, description }) => (\n            <ConsistsItem key={name} name={name} description={description} />\n          ))}\n        </ConsistsList>\n      </Container>\n    </Section>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { SwiperSlide } from 'swiper/react';\n\nconst NAV_BREAKPOINTS_SMALL = 572;\n\nexport const GroupsNavContainer = styled.div`\n  margin: 0 auto 40px;\n\n  @media (min-width: ${NAV_BREAKPOINTS_SMALL}px) {\n    display: flex;\n    justify-content: center;\n    align-content: center;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const NavSwiperSlide = styled(SwiperSlide)`\n  display: flex;\n  max-width: max-content;\n  /* -> 1. кнопки розташовані поруч; 2. кнопки не перекривають одна одну */\n`;\n\nexport const NavButton = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n\n  padding: 0 32px;\n  height: 44px;\n  font-size: 14px;\n\n  color: ${p => p.theme.colors.wt};\n  background-color: ${p => p.theme.colors.btnBg};\n  border: ${p => p.theme.borders.none};\n  border-bottom: 1.5px solid transparent;\n  border-radius: 12px;\n  transition: var(--transition-bg), var(--transition-color),\n    var(--transition-border-color);\n\n  &:hover,\n  &:focus,\n  &.active {\n    color: ${p => p.theme.colors.aBg};\n    background-color: ${p => p.theme.colors.panelBg};\n    border-bottom: 1.5px solid ${p => p.theme.colors.aBg};\n  }\n\n  @media (min-width: ${NAV_BREAKPOINTS_SMALL}px) {\n    width: 180px;\n    height: 58px;\n    padding: 16px;\n    font-size: 16px;\n  }\n`;","import React from 'react';\nimport { Swiper } from 'swiper/react';\nimport { GroupsNavContainer, NavButton, NavSwiperSlide } from './GroupsNavigation.styled';\nimport { Sizes } from 'components/global';\n\nimport 'swiper/css';\nimport 'swiper/css/bundle';\n\nexport const GroupsNavigation = () => {\n  const breakpointStyles = {\n    [Sizes.desktop]: {\n      spaceBetween: 24,\n    },\n  };\n\n  return (\n    <GroupsNavContainer>\n      <Swiper\n        spaceBetween={16}\n        slidesPerView=\"auto\"\n        breakpoints={breakpointStyles}\n      >\n        <NavSwiperSlide>\n          <NavButton to=\"\" end>\n            Всі пропозиції\n          </NavButton>\n        </NavSwiperSlide>\n        <NavSwiperSlide>\n          <NavButton to=\"online\">Онлайн</NavButton>\n        </NavSwiperSlide>\n        <NavSwiperSlide>\n          <NavButton to=\"offline\">Офлайн</NavButton>\n        </NavSwiperSlide>\n      </Swiper>\n    </GroupsNavContainer>\n  );\n};\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport { Section, Text } from 'components/global';\n\nimport { SectionTitle } from '../../common';\nimport { Container } from './Groups.styled';\nimport { GroupsNavigation } from './GroupsNavigation';\n\nexport const Groups = ({ groups }) => {\n  const isGroups = groups?.length > 0 ? true : false;\n\n  return (\n    <Section>\n      <Container>\n        <SectionTitle color=\"at\">Старт навчання</SectionTitle>\n        {isGroups && (\n            <GroupsNavigation />\n        )}\n        {!isGroups && (\n          <Text size={20} lh=\"body\" textAlign=\"center\">\n            Поки що немає груп для навчання...\n          </Text>\n        )}\n\n        <Suspense fallback=\"Loading...\">\n          <Outlet />\n        </Suspense>\n      </Container>\n    </Section>\n  );\n};\n","import styled from 'styled-components';\nimport { Button, devices } from 'components/global';\n\nexport const DetailsBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  ${devices.desktop} {\n    flex-direction: row-reverse;\n    gap: 24px;\n  }\n`;\n\nexport const ImageWrap = styled.div`\n  width: 100%;\n  height: auto;\n  overflow: hidden;\n  border-radius: 12px;\n  box-shadow: ${p => p.theme.shadows.s};\n\n  ${devices.desktop} {\n    width: 588px;\n    height: 512px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const Block = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const ProgramContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding: 20px;\n  border-radius: 12px;\n  background-color: ${p => p.theme.colors.bg};\n  box-shadow: ${p => p.theme.shadows.s};\n\n  ${devices.desktop} {\n    padding: 40px 60px;\n  }\n`;\n\nexport const PriceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n\n  padding: 20px;\n  border-radius: 12px;\n  background-color: ${p => p.theme.colors.bg};\n  box-shadow: ${p => p.theme.shadows.s};\n\n  ${devices.desktop} {\n    gap: 20px;\n    padding: 40px 20px;\n  }\n`;\n\nexport const ProgramList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  width: 100%;\n\n  ${devices.desktop} {\n    align-items: center;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n\n  ${devices.desktop} {\n    flex-direction: row;\n    align-items: center;\n    gap: 12px;\n  }\n`;\n\nexport const ButtonPay = styled(Button)`\n  padding: 16px 56.5px;\n`;\n","import { Text } from \"components/global\";\nimport { Item } from \"./Programs.styled\";\n\nexport const ProgramItem = ({ name, description}) => {\n  return (\n    <Item>\n      <Text size={16} weight={700} lh=\"body\">\n        {name}:\n      </Text>\n      <Text lh=\"body\">{description}</Text>\n    </Item>\n  );\n};","import { Container, Section, Text, TitleH4 } from 'components/global';\nimport { ProgramItem } from './ProgramItem';\n\nimport {\n  ButtonPay,\n  ImageWrap,\n  Image,\n  ProgramList,\n  Block,\n  DetailsBlock,\n  ProgramContainer,\n  PriceContainer,\n} from './Programs.styled';\n\nimport { SectionTitle } from '../../common';\n\nexport const Program = ({ category, program, price, image }) => {\n  if (!program) return;\n  const detailsArray = Object.values(program);\n\n  return (\n    <Section>\n      <Container>\n        <SectionTitle color=\"at\">Деталі навчання</SectionTitle>\n        <DetailsBlock>\n          <ImageWrap>\n            <Image src={image} alt={category} loading=\"lazy\" />\n          </ImageWrap>\n          <Block>\n            <ProgramContainer>\n              <TitleH4 color=\"at\" mb={20}>\n                Програма\n              </TitleH4>\n              <ProgramList>\n                {detailsArray.map(({ name, description }) => (\n                  <ProgramItem\n                    key={name}\n                    name={name}\n                    description={description}\n                  />\n                ))}\n              </ProgramList>\n            </ProgramContainer>\n            <PriceContainer>\n              <TitleH4 color=\"at\" weight={700}>\n                Вартість\n              </TitleH4>\n              <Text weight={700} size={20} lh=\"big\">\n                {price ? price : '?????'} грн\n              </Text>\n              <Text color=\"t\" textAlign=\"center\" lh=\"body\">\n                *Перед оплатою уточніть наявність вільних місць, а також умов\n                оплати\n              </Text>\n              <ButtonPay>Оплатити</ButtonPay>\n            </PriceContainer>\n          </Block>\n        </DetailsBlock>\n      </Container>\n    </Section>\n  );\n};\n","import React from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useParams } from 'react-router-dom';\nimport { getCourseById } from 'api';\nimport { BackLinkRef } from 'components/global';\n// import { Reviews } from 'components/modules/Reviews';\n\nimport { About, Consists, Groups, Program } from './components';\n\nexport const CourseDetails = () => {\n  const { id: courseId } = useParams();\n  \n  const { data, isLoading, isSuccess, isError } = useQuery({\n    queryKey: ['courses', courseId],\n    queryFn: () => getCourseById(courseId),\n  });\n\n  const defineType = data?.type === 'courses' ? 'курс' : 'майстер-клас';\n\n  return (\n    <>\n      {isLoading && <p>Завантаження...</p>}\n      {isError && <p>Виникла помилка. Спробуйте пізніше</p>}\n      {isSuccess && (\n        <>\n          <BackLinkRef />\n          <About\n            category={data.category}\n            type={defineType}\n            previewText={data.previewText}\n            description={data.description}\n            image={data.images[0]}\n          />\n          <Consists details={data.details} type={defineType} />\n          <Program\n            category={data.category}\n            program={data.program}\n            price={data?.groups[0]?.price}\n            image={data.images[1]}\n          />\n          <Groups groups={data.groups} />\n        </>\n      )}\n\n      {/* <Reviews title={'Відгуки'} /> */}\n    </>\n  );\n};\n","import React from 'react';\nimport { CourseDetails as CourseDetailsComponent } from 'components/modules/CourseDetails';\n\nexport default function CourseDetails2() {\n  return <CourseDetailsComponent />;\n}\n"],"names":["AboutContainer","styled","Container","Title","TitleH1","devices","TopText","TextBase","ContentWrap","ImageWrap","p","theme","colors","btnBg","Image","TextWrap","About","category","type","previewText","description","image","descriptionArray","split","color","textAlign","lh","src","alt","loading","mb","map","text","index","size","ConsistsList","ConsistItemWrap","ConsistsItem","name","weight","SectionTitle","TitleH3","Consists","details","detailsArray","Object","values","GroupsNavContainer","NavSwiperSlide","SwiperSlide","NavButton","NavLink","wt","borders","none","aBg","panelBg","GroupsNavigation","breakpointStyles","Sizes","spaceBetween","slidesPerView","breakpoints","to","end","Groups","groups","isGroups","length","Suspense","fallback","DetailsBlock","shadows","s","Block","ProgramContainer","bg","PriceContainer","ProgramList","Item","ButtonPay","Button","ProgramItem","Program","program","price","CourseDetails","courseId","useParams","id","useQuery","queryKey","queryFn","getCourseById","data","isLoading","isSuccess","isError","defineType","images","CourseDetails2"],"sourceRoot":""}